{"version":3,"sources":["app.min.js"],"names":["config","$routeProvider","$locationProvider","when","templateUrl","controller","controllerAs","template","otherwise","redirectTo","html5Mode","run","$rootScope","$location","authentication","$on","event","nextRoute","currentRoute","path","isLoggedIn","angular","module","homeCtrl","vm","this","console","log","$inject","profileCtrl","meanData","user","getProfile","success","data","error","e","loginCtrl","credentials","email","password","onSubmit","login","err","alert","then","logout","registerCtrl","name","register","jwtInjector","$window","request","localStorage","jwt","headers","$http","saveToken","token","getToken","payload","split","atob","JSON","parse","exp","Date","now","currentUser","post","removeItem","service","factory","$httpProvider","interceptors","push","get","navigationCtrl","navigation","restrict","directive"],"mappings":"CAAA,WAIE,QAASA,GAAQC,EAAgBC,GAC/BD,EACGE,KAAK,KACJC,YAAa,sBACbC,WAAY,WACZC,aAAc,OAEfH,KAAK,aACJC,YAAa,oCACbC,WAAY,eACZC,aAAc,OAEfH,KAAK,UACJC,YAAa,8BACbC,WAAY,YACZC,aAAc,OAEfH,KAAK,YACJC,YAAa,6BACbC,WAAY,cACZC,aAAc,OAEfH,KAAK,WACJI,SAAU,GACVF,WAAY,eAEbG,WAAWC,WAAY,MAG1BP,EAAkBQ,WAAU,GAG9B,QAASC,GAAIC,EAAYC,EAAWC,GAClCF,EAAWG,IAAI,oBAAqB,SAASC,EAAOC,EAAWC,GACpC,aAArBL,EAAUM,QAA0BL,EAAeM,cACrDP,EAAUM,KAAK,OArCrBE,QAAQC,OAAO,WAAY,YA0C3BD,QACGC,OAAO,WACPtB,QAAQ,iBAAkB,oBAAqBA,IAC/CW,KAAK,aAAc,YAAa,iBAAkBA,OAGvD,WAOI,QAASY,GAAUT,GACjB,GAAIU,GAAKC,IAETD,GAAGJ,WAAaN,EAAeM,aAE/BM,QAAQC,IAAI,8BAVhBN,QACGC,OAAO,WACPjB,WAAW,WAAYkB,GAExBA,EAASK,SAAW,qBAUxB,WAOE,QAASC,GAAYhB,EAAWiB,GAC9B,GAAIN,GAAKC,IAETD,GAAGO,QAEHD,EAASE,aACNC,QAAQ,SAASC,GAChBV,EAAGO,KAAOG,IAEXC,MAAM,SAAUC,GACfV,QAAQC,IAAIS,KAflBf,QACGC,OAAO,WACPjB,WAAW,cAAewB,GAE7BA,EAAYD,SAAW,YAAa,eAgBtC,WAOE,QAASS,GAAUxB,EAAWC,GAC5B,GAAIU,GAAKC,IAETD,GAAGc,aACDC,MAAQ,GACRC,SAAW,IAGbhB,EAAGiB,SAAW,WACZ3B,EACG4B,MAAMlB,EAAGc,aACTH,MAAM,SAASQ,GACdC,MAAMD,KAEPE,KAAK,WACJhC,EAAUM,KAAK,cApBvBE,QACCC,OAAO,WACPjB,WAAW,YAAagC,GAEzBA,EAAUT,SAAW,YAAa,qBAuBpC,WAOE,QAASS,GAAUxB,EAAWC,GAE5BA,EAAegC,SAGfjC,EAAUM,KAAK,KAVjBE,QACCC,OAAO,WACPjB,WAAW,aAAcgC,GAE1BA,EAAUT,SAAW,YAAa,qBAUpC,WAOE,QAASmB,GAAalC,EAAWC,GAC/B,GAAIU,GAAKC,IAETD,GAAGc,aACDU,KAAO,GACPT,MAAQ,GACRC,SAAW,IAGbhB,EAAGiB,SAAW,WACZf,QAAQC,IAAI,2BACZb,EACGmC,SAASzB,EAAGc,aACZH,MAAM,SAASQ,GACdC,MAAMD,KAEPE,KAAK,WACJhC,EAAUM,KAAK,cAtBvBE,QACGC,OAAO,WACPjB,WAAW,eAAgB0C,GAE9BA,EAAanB,SAAW,YAAa,qBAyBvC,WAYE,QAASsB,GAAYC,GACnB,OACEC,QAAS,SAASpD,GAWhB,MAPgD,mBAAvCmD,GAAQE,aAAa,eACN,mBAAfrD,GAAOsD,KACdtD,EAAOsD,OAAQ,IAEftD,EAAOuD,QAAuB,cAAI,UAAYJ,EAAQE,aAAa,eAG9DrD,IAMb,QAASc,GAAgB0C,EAAOL,GAE9B,GAAIM,GAAY,SAAUC,GACxBP,EAAQE,aAAa,cAAgBK,GAGnCC,EAAW,WACb,MAAOR,GAAQE,aAAa,eAG1BjC,EAAa,WACf,GACIwC,GADAF,EAAQC,GAGZ,SAAGD,IACDE,EAAUF,EAAMG,MAAM,KAAK,GAC3BD,EAAUT,EAAQW,KAAKF,GACvBA,EAAUG,KAAKC,MAAMJ,GAEdA,EAAQK,IAAMC,KAAKC,MAAQ,MAMlCC,EAAc,WAChB,GAAGhD,IAAa,CACd,GAAIsC,GAAQC,IACRC,EAAUF,EAAMG,MAAM,KAAK,EAG/B,OAFAD,GAAUT,EAAQW,KAAKF,GACvBA,EAAUG,KAAKC,MAAMJ,IAEnBrB,MAAQqB,EAAQrB,MAChBS,KAAOY,EAAQZ,OAqBrB,OAhBAC,UAAW,SAASlB,GAClB,MAAOyB,GAAMa,KAAK,gBAAiBtC,GAAME,QAAQ,SAASC,GACxDuB,EAAUvB,EAAKwB,UAInBhB,MAAQ,SAASX,GACf,MAAOyB,GAAMa,KAAK,aAActC,GAAME,QAAQ,SAASC,GACrDuB,EAAUvB,EAAKwB,UAInBZ,OAAS,WACPK,EAAQE,aAAaiB,WAAW,gBAIhCF,YAAcA,EACdX,UAAYA,EACZE,SAAWA,EACXvC,WAAaA,EACb6B,SAAWA,SACXP,MAAQA,MACRI,OAASA,QA1FbzB,QACGC,OAAO,WACPiD,QAAQ,iBAAkBzD,GAC1B0D,QAAQ,cAAetB,GACvBlD,QAAQ,gBAAiB,SAASyE,GACjCA,EAAcC,aAAaC,KAAK,kBAIpCzB,EAAYtB,SAAW,WAmBvBd,EAAec,SAAW,QAAS,cAoErC,WAOE,QAASE,GAAU0B,EAAO1C,GAExB,GAAIkB,GAAa,WAEf,MAAOwB,GAAMoB,IAAI,gBACftB,KAAK,IAIT,QACEtB,WAAaA,GAfjBX,QACGC,OAAO,WACPiD,QAAQ,WAAYzC,GAEvBA,EAASF,SAAW,QAAS,qBAgB/B,WAOE,QAASiD,GAAehE,EAAWC,GACjC,GAAIU,GAAKC,IAETD,GAAGJ,WAAaN,EAAeM,aAE/BI,EAAG4C,YAActD,EAAesD,cAVlC/C,QACGC,OAAO,WACPjB,WAAW,iBAAkBwE,GAEhCA,EAAejD,SAAW,YAAY,qBAWxC,WAME,QAASkD,KACP,OACEC,SAAU,KACV3E,YAAa,yDACbC,WAAY,2BARhBgB,QACGC,OAAO,WACP0D,UAAU,aAAcF","file":"app.min.js","sourcesContent":["(function () {\n\n  angular.module('meanApp', ['ngRoute']);\n\n  function config ($routeProvider, $locationProvider) {\n    $routeProvider\n      .when('/', {\n        templateUrl: 'home/home.view.html',\n        controller: 'homeCtrl',\n        controllerAs: 'vm'\n      })\n      .when('/register', {\n        templateUrl: '/auth/register/register.view.html',\n        controller: 'registerCtrl',\n        controllerAs: 'vm'\n      })\n      .when('/login', {\n        templateUrl: '/auth/login/login.view.html',\n        controller: 'loginCtrl',\n        controllerAs: 'vm'\n      })\n      .when('/profile', {\n        templateUrl: '/profile/profile.view.html',\n        controller: 'profileCtrl',\n        controllerAs: 'vm'\n      })\n      .when('/logout', {\n        template: '',\n        controller: 'logoutCtrl'\n      })\n      .otherwise({redirectTo: '/'});\n\n    // use the HTML5 History API\n    $locationProvider.html5Mode(true);\n  }\n\n  function run($rootScope, $location, authentication) {\n    $rootScope.$on('$routeChangeStart', function(event, nextRoute, currentRoute) {\n      if ($location.path() === '/profile' && !authentication.isLoggedIn()) {\n        $location.path('/');\n      }\n    });\n  }\n\n  angular\n    .module('meanApp')\n    .config(['$routeProvider', '$locationProvider', config])\n    .run(['$rootScope', '$location', 'authentication', run]);\n\n})();\n(function() {\n\n  angular\n    .module('meanApp')\n    .controller('homeCtrl', homeCtrl);\n\n    homeCtrl.$inject = ['authentication'];\n    function homeCtrl (authentication) {\n      var vm = this;\n\n      vm.isLoggedIn = authentication.isLoggedIn();\n\n      console.log('Home controller is running');\n    }\n\n})();\n(function() {\n  \n  angular\n    .module('meanApp')\n    .controller('profileCtrl', profileCtrl);\n\n  profileCtrl.$inject = ['$location', 'meanData'];\n  function profileCtrl($location, meanData) {\n    var vm = this;\n\n    vm.user = {};\n\n    meanData.getProfile()\n      .success(function(data) {\n        vm.user = data;\n      })\n      .error(function (e) {\n        console.log(e);\n      });\n  }\n\n})();\n(function () {\n\n  angular\n  .module('meanApp')\n  .controller('loginCtrl', loginCtrl);\n\n  loginCtrl.$inject = ['$location', 'authentication'];\n  function loginCtrl($location, authentication) {\n    var vm = this;\n\n    vm.credentials = {\n      email : \"\",\n      password : \"\"\n    };\n\n    vm.onSubmit = function () {\n      authentication\n        .login(vm.credentials)\n        .error(function(err){\n          alert(err);\n        })\n        .then(function(){\n          $location.path('profile');\n        });\n    };\n\n  }\n\n})();\n(function () {\n\n  angular\n  .module('meanApp')\n  .controller('logoutCtrl', loginCtrl);\n\n  loginCtrl.$inject = ['$location', 'authentication'];\n  function loginCtrl($location, authentication) {\n    // logout the user\n    authentication.logout();\n\n    // redirect to the homepage\n    $location.path('/');\n  }\n\n})();\n(function () {\n\n  angular\n    .module('meanApp')\n    .controller('registerCtrl', registerCtrl);\n\n  registerCtrl.$inject = ['$location', 'authentication'];\n  function registerCtrl($location, authentication) {\n    var vm = this;\n\n    vm.credentials = {\n      name : \"\",\n      email : \"\",\n      password : \"\"\n    };\n\n    vm.onSubmit = function () {\n      console.log('Submitting registration');\n      authentication\n        .register(vm.credentials)\n        .error(function(err){\n          alert(err);\n        })\n        .then(function(){\n          $location.path('profile');\n        });\n    };\n\n  }\n\n})();\n(function () {\n\n  angular\n    .module('meanApp')\n    .service('authentication', authentication)\n    .factory('jwtInjector', jwtInjector)\n    .config(['$httpProvider', function($httpProvider) {\n      $httpProvider.interceptors.push('jwtInjector');\n    }])\n    ;\n\n  jwtInjector.$inject = ['$window'];\n  function jwtInjector($window) {\n    return {\n      request: function(config) {\n\n        // inject JWT token in the HTTP request headers using the header field: Authorization\n        if (\n          typeof $window.localStorage['mean-token'] !== 'undefined' &&\n          typeof config.jwt !== 'undefined' &&\n          config.jwt === true\n        ) {\n          config.headers['Authorization'] = 'Bearer ' + $window.localStorage['mean-token'];\n        }\n\n        return config;\n      }\n    };\n  }\n\n  authentication.$inject = ['$http', '$window'];\n  function authentication ($http, $window) {\n\n    var saveToken = function (token) {\n      $window.localStorage['mean-token'] = token;\n    };\n\n    var getToken = function () {\n      return $window.localStorage['mean-token'];\n    };\n\n    var isLoggedIn = function() {\n      var token = getToken();\n      var payload;\n\n      if(token){\n        payload = token.split('.')[1];\n        payload = $window.atob(payload);\n        payload = JSON.parse(payload);\n\n        return payload.exp > Date.now() / 1000;\n      } else {\n        return false;\n      }\n    };\n\n    var currentUser = function() {\n      if(isLoggedIn()){\n        var token = getToken();\n        var payload = token.split('.')[1];\n        payload = $window.atob(payload);\n        payload = JSON.parse(payload);\n        return {\n          email : payload.email,\n          name : payload.name\n        };\n      }\n    };\n\n    register = function(user) {\n      return $http.post('/api/register', user).success(function(data){\n        saveToken(data.token);\n      });\n    };\n\n    login = function(user) {\n      return $http.post('/api/login', user).success(function(data) {\n        saveToken(data.token);\n      });\n    };\n\n    logout = function() {\n      $window.localStorage.removeItem('mean-token');\n    };\n\n    return {\n      currentUser : currentUser,\n      saveToken : saveToken,\n      getToken : getToken,\n      isLoggedIn : isLoggedIn,\n      register : register,\n      login : login,\n      logout : logout\n    };\n  }\n\n\n})();\n(function() {\n\n  angular\n    .module('meanApp')\n    .service('meanData', meanData);\n\n  meanData.$inject = ['$http', 'authentication'];\n  function meanData ($http, authentication) {\n\n    var getProfile = function () {\n      // set jwt to true to inject the Authorization header automatically\n      return $http.get('/api/profile', {\n        jwt: true\n      });\n    };\n\n    return {\n      getProfile : getProfile\n    };\n  }\n\n})();\n(function () {\n\n  angular\n    .module('meanApp')\n    .controller('navigationCtrl', navigationCtrl);\n\n  navigationCtrl.$inject = ['$location','authentication'];\n  function navigationCtrl($location, authentication) {\n    var vm = this;\n\n    vm.isLoggedIn = authentication.isLoggedIn();\n\n    vm.currentUser = authentication.currentUser();\n\n  }\n\n})();\n(function () {\n\n  angular\n    .module('meanApp')\n    .directive('navigation', navigation);\n\n  function navigation () {\n    return {\n      restrict: 'EA',\n      templateUrl: '/common/directives/navigation/navigation.template.html',\n      controller: 'navigationCtrl as navvm'\n    };\n  }\n\n})();"]}